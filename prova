Exercicio 1


As seguintes funcionalidades foram solicitadas pelo cliente e deverão ser descritos os scripts em baixo de cada questão: Criar um banco de dados chamado VIASOFT, é opcional descrever o comando de criação aqui.

	R: CREATE DATABASE VIASOFT;

2. Devemos criar uma tabela para armazenar as informações básicas de nossos clientes. Sendo assim gostaríamos de armazenar o nome, cpf e telefone dos nossos clientes, e todas essas informações devem ser obrigatórias.

	R: 
	
	CREATE TABLE IF NOT EXISTS clientes (
	id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	nome VARCHAR(255) NOT NULL,
	cpf CHAR(11) NOT NULL,
	telefone VARCHAR(11) NOT NULL
	);

3. Criar uma tabela para armazenar as informações dos produtos. Nessa tabela deve ser armazenada a descrição do produto que não pode ser nula e deve armazenar no máximo 100 caracteres, e por fim uma coluna que armazene o valor unitário do produto que também deve ser obrigatório.
	
	R:
	
	CREATE TABLE IF NOT EXISTS produtos (
	id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	desc VARCHAR(100) NOT NULL,
	valorUnit DECIMAL(15,2) NOT NULL
	);

4. Para armazenar as informações dos pedidos, precisamos criar duas novas tabelas, uma com o cabeçalho do pedido e outra com os itens do pedido. Na tabela de cabeçalho devemos armazenar o código do cliente, e a data que o pedido foi emitido, importante notar é que todos os campos dessa tabela devem ser obrigatórios. Já na tabela de itens do pedido deve ser armazenado o código do pedido e o código do item, o valor unitário do item, a quantidade de itens adquiridos na compra e um percentual de desconto no item da compra, apenas o percentual de desconto pode ser nulo.

Exercicio 2

Devemos inserir no nosso banco de dados as informações do antigo sistema do cliente. 
(table)

Tabela clientes
(table)

Tabela de pedidos
(table)

Tabela de itens dos pedidos
(table)

Exercicio 3:

Retorne uma lista dos clientes que contém “ari” no nome.


2. Retorne uma lista dos clientes que começam com o nome “ma”.

3. Retorne uma lista dos clientes que terminem com o nome “ula”.

4. Retorne uma lista dos clientes concatenando o código do mesmo com o nome, separando por hífen.

5. Retorne uma lista dos clientes concatenando o nome da coluna com o valor da mesma. Ex: ‘ID_CLIENTE: 1’, ’NOME: Jóse‘...

6. Retorne uma lista com o nome e telefone dos clientes que possuem pedidos, distinguindo os resultados retornados?

7. Retorne uma lista com a descrição e valor unitário do item do pedido que tenham vínculos com pedidos, ordenando a lista por valor unitário de forma decrescente.

8. Retorne uma lista com o nome dos clientes e a quantidade de pedidos de cada um, ordenado a lista pelos clientes que mais possuem pedidos?

9. Retorne uma lista de todos os pedidos realizados, contando a quantidade de itens de cada pedido.

10. Quantidade de pedidos sem desconto aplicado.

11. Quantidade de pedidos com desconto aplicado.

12. Faça um update no banco de dados na coluna de desconto da tabela de itens do pedido, defina o valor 0 quando o valor do desconto for nulo.

13. Realize um alter table na tabela de pedido item, definindo a coluna de desconto como not null.

14. Retorne uma lista de todos os pedidos realizados, somando o valor total de todos os itens do pedido, multiplicando pela quantidade e aplicando o desconto.

15. Retorne o valor médio dos pedidos por cliente.

16. Qual foi o item mais vendido?

17. Que pedido teve o maior valor?

18. Qual o resultado da soma de todos os pedidos considerando o desconto aplicado?

19. Qual o valor total de descontos concedidos?

20 . Em qual data foi emitido mais pedidos?

21. Qual foi o segundo dia que mais pedidos foram emitidos?
